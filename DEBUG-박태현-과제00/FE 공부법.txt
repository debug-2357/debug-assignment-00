클라이언트 사이드 : 사용자 측에서 처리하는 것

반응형 웹 : 브라우저, 기기, 스크린 사이즈에 따른 지원

프론트엔드의 웹이 아닌 앱 환경까지 담당

웹뷰 : 앱에서 웹을 띄우는 역할(?)

디자인 구현 : 프론트엔드는 디자인을 할 수 있어야 하는가? -> 프론트엔드는 기능을 구현할 뿐 디자인을 직접하지는 않는다

기능 개발 : 프론트엔드가 하는 일

웹 앱 최적화 : 기능만 구현한다고 끝이 아닌 사용자가 최적화된 웹을 경험할 수 있도록 하여야 한다

다양한 브라우저 지원

프론트엔드가 하는 일 : 1. 데이터를 잘(예쁘게) 사용자에게 보여주기
  			    2. 데이터(화면)를 조작하기
  			    3. 서버로 데이터를 보내기
  			    4. 서버에서 받은 데이터를 다루기

프론트엔드의 장단점 : 장점 1. 눈에 보인다
				  2. 언어에 대한 고민이 적다(많은 언어를 알아야하는 것이 아니다)
				  3. 혼자 프로젝트를 시작하기 좋다 == 백엔드로 옮기기에도 적합하다
				  4. 긴급대응이 없다

			    단점 1. 급변하는 기술 트렌드
				  2. 중간계 (디자이너 <=> 프론트엔드 <=> 백엔드)

무엇을 준비해야 할까 : 1. 기초 언어 학습
			     2. 클론코딩(이미 만들어져 있는 것을 똑같이 따라 코딩해보는 것)
			     3. 프레임워크 및 라이브러리 학습
			     4. 다양한 프로젝트 시도(많이 할수록 좋음)
 			     5. 교내 동아리, 대외활동, 부트캠프 활동
			     6. 자바스크립트 동작 원리 공부(모던 자바스크립트 Deep Dive, 코어 자바스크립트 <- 대표적인 책들)